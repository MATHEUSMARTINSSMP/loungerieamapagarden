üìã INSTRU√á√ïES COMPLETAS PARA IMPLEMENTAR DADOS REAIS
CONTEXTO GERAL
A plataforma ELEVEA (ag√™ncia digital) tem um dashboard que mostra dados anal√≠ticos dos sites dos clientes. Atualmente usa dados fict√≠cios, mas j√° tem toda a infraestrutura para dados reais implementada. O site do cliente precisa enviar dados reais para o dashboard da ELEVEA funcionar corretamente.

‚ö†Ô∏è IMPORTANTE: O layout do site do cliente N√ÉO muda. S√≥ adicionamos infraestrutura invis√≠vel de tracking.

üéØ REPOSIT√ìRIO DO CLIENTE
https://github.com/mathmartins-star/loungerieamapagarden.git
üîß MUDAN√áAS NECESS√ÅRIAS NO SITE DO CLIENTE
1. ADICIONAR PIXEL DE TRACKING
üìÅ Localiza√ß√£o: Criar arquivo public/js/elevea-analytics.js

// public/js/elevea-analytics.js
(function() {
    'use strict';
    
    // Configura√ß√£o - ALTERE AQUI O SITE_SLUG
    const SITE_SLUG = 'LOUNGERIEAMAPAGARDEN'; // ‚ö†Ô∏è IMPORTANTE: Usar o slug correto
    const ELEVEA_API = 'https://eleveaagencia.netlify.app/.netlify/functions/client-api';
    
    // Fun√ß√£o para capturar dados da visita
    function getVisitData() {
        return {
            path: window.location.pathname,
            userAgent: navigator.userAgent,
            referrer: document.referrer || '',
            timestamp: new Date().toISOString(),
            screen: {
                width: screen.width,
                height: screen.height
            },
            viewport: {
                width: window.innerWidth,
                height: window.innerHeight
            }
        };
    }
    
    // Fun√ß√£o para enviar hit para ELEVEA
    async function recordHit() {
        try {
            const visitData = getVisitData();
            
            const response = await fetch(ELEVEA_API, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    action: 'record_hit',
                    site: SITE_SLUG,
                    meta: visitData
                })
            });
            
            if (response.ok) {
                console.log('‚úÖ Hit registrado na ELEVEA');
            }
        } catch (error) {
            console.log('‚ö†Ô∏è Erro ao registrar hit:', error);
        }
    }
    
    // Executar quando p√°gina carregar
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', recordHit);
    } else {
        recordHit();
    }
    
    // Registrar mudan√ßas de p√°gina (SPA)
    let currentPath = window.location.pathname;
    setInterval(() => {
        if (window.location.pathname !== currentPath) {
            currentPath = window.location.pathname;
            recordHit();
        }
    }, 1000);
})();
2. ADICIONAR TRACKING DE LEADS
üìÅ Localiza√ß√£o: Criar arquivo public/js/elevea-leads.js

// public/js/elevea-leads.js
(function() {
    'use strict';
    
    const SITE_SLUG = 'LOUNGERIEAMAPAGARDEN'; // ‚ö†Ô∏è IMPORTANTE: Mesmo slug
    const ELEVEA_API = 'https://eleveaagencia.netlify.app/.netlify/functions/client-api';
    
    // Fun√ß√£o para enviar lead
    async function sendLead(leadData) {
        try {
            const response = await fetch(ELEVEA_API, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    action: 'create_lead',
                    site: SITE_SLUG,
                    name: leadData.name || '',
                    email: leadData.email || '',
                    phone: leadData.phone || '',
                    source: 'site'
                })
            });
            
            if (response.ok) {
                console.log('‚úÖ Lead enviado para ELEVEA');
            }
        } catch (error) {
            console.log('‚ö†Ô∏è Erro ao enviar lead:', error);
        }
    }
    
    // Fun√ß√£o para capturar formul√°rios
    function attachFormTracking() {
        const forms = document.querySelectorAll('form');
        
        forms.forEach(form => {
            form.addEventListener('submit', function(e) {
                const formData = new FormData(form);
                const leadData = {};
                
                // Capturar campos comuns
                for (let [key, value] of formData.entries()) {
                    if (key.toLowerCase().includes('name') || key.toLowerCase().includes('nome')) {
                        leadData.name = value;
                    }
                    if (key.toLowerCase().includes('email') || key.toLowerCase().includes('e-mail')) {
                        leadData.email = value;
                    }
                    if (key.toLowerCase().includes('phone') || key.toLowerCase().includes('telefone') || key.toLowerCase().includes('whatsapp')) {
                        leadData.phone = value;
                    }
                }
                
                // Enviar lead se tiver pelo menos email ou telefone
                if (leadData.email || leadData.phone) {
                    sendLead(leadData);
                }
            });
        });
    }
    
    // Executar quando p√°gina carregar
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', attachFormTracking);
    } else {
        attachFormTracking();
    }
})();
3. MODIFICAR HTML PRINCIPAL
üìÅ Localiza√ß√£o: index.html (ou arquivo HTML principal)

üîç Encontrar: A tag </head>

‚ûï Adicionar ANTES de </head>:

<!-- ELEVEA Analytics - N√£o remover -->
<script src="./js/elevea-analytics.js" async></script>
<script src="./js/elevea-leads.js" async></script>
<!-- Fim ELEVEA Analytics -->
4. CONFIGURAR FEEDBACK/AVALIA√á√ïES (OPCIONAL)
üìÅ Localiza√ß√£o: Criar arquivo public/js/elevea-feedback.js

// public/js/elevea-feedback.js
(function() {
    'use strict';
    
    const SITE_SLUG = 'LOUNGERIEAMAPAGARDEN';
    const ELEVEA_API = 'https://eleveaagencia.netlify.app/.netlify/functions/client-api';
    
    // Fun√ß√£o para enviar feedback
    async function sendFeedback(feedbackData) {
        try {
            const response = await fetch(ELEVEA_API, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    action: 'create_feedback',
                    site: SITE_SLUG,
                    rating: feedbackData.rating,
                    comment: feedbackData.comment || '',
                    name: feedbackData.name || '',
                    email: feedbackData.email || '',
                    phone: feedbackData.phone || ''
                })
            });
            
            if (response.ok) {
                console.log('‚úÖ Feedback enviado para ELEVEA');
            }
        } catch (error) {
            console.log('‚ö†Ô∏è Erro ao enviar feedback:', error);
        }
    }
    
    // Disponibilizar globalmente para uso manual
    window.eleveaFeedback = sendFeedback;
})();
üéÆ COMO INTEGRAR NO HTML
EXEMPLO DE USO MANUAL (se precisar):
<!-- Para avalia√ß√µes por estrelas -->
<div class="rating">
    <button onclick="eleveaFeedback({rating: 5, comment: 'Excelente!'})">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</button>
    <button onclick="eleveaFeedback({rating: 4, comment: 'Muito bom!'})">‚≠ê‚≠ê‚≠ê‚≠ê</button>
    <!-- etc -->
</div>
‚úÖ CHECKLIST DE IMPLEMENTA√á√ÉO
üìã PASSOS OBRIGAT√ìRIOS:
‚úÖ Clonar reposit√≥rio:
git clone https://github.com/mathmartins-star/loungerieamapagarden.git
cd loungerieamapagarden
‚úÖ Criar pasta js (se n√£o existir):
mkdir -p public/js
‚úÖ Criar arquivos JavaScript:
public/js/elevea-analytics.js (OBRIGAT√ìRIO)
public/js/elevea-leads.js (OBRIGAT√ìRIO)
public/js/elevea-feedback.js (OPCIONAL)
‚úÖ Modificar HTML principal:
Adicionar scripts antes de </head>
‚úÖ VERIFICAR SITE_SLUG:
Confirmar que LOUNGERIEAMAPAGARDEN √© o slug correto
Deve ser o mesmo usado no dashboard da ELEVEA
‚úÖ Testar localmente:
Abrir site em navegador
Verificar console (F12) se aparece "‚úÖ Hit registrado na ELEVEA"
‚úÖ Fazer commit e push:
git add .
git commit -m "Adicionar tracking ELEVEA para dados reais"
git push origin main
üß™ COMO TESTAR SE EST√Å FUNCIONANDO
1. TESTE LOCAL:
Abrir site em navegador
Abrir DevTools (F12) ‚Üí Console
Recarregar p√°gina
Verificar se aparece: ‚úÖ Hit registrado na ELEVEA
2. TESTE DE LEADS:
Preencher e enviar qualquer formul√°rio do site
Verificar console: ‚úÖ Lead enviado para ELEVEA
3. VERIFICAR NO DASHBOARD ELEVEA:
Acessar dashboard da ELEVEA
Ir na se√ß√£o Analytics
Verificar se dados reais aparecem (pode demorar alguns minutos)
‚ö†Ô∏è PONTOS CR√çTICOS
üîë SITE_SLUG CORRETO:
Deve ser exatamente o mesmo usado na ELEVEA
Formato: LOUNGERIEAMAPAGARDEN (mai√∫sculo, sem espa√ßos)
Confirmar com administrador da ELEVEA
üåê URL DA API:
https://eleveaagencia.netlify.app/.netlify/functions/client-api
N√ÉO alterar esta URL
üì± COMPATIBILIDADE:
Scripts funcionam em todos navegadores modernos
N√£o interfere com layout existente
Execu√ß√£o ass√≠ncrona (n√£o trava o site)
üö® EM CASO DE PROBLEMAS
Script n√£o carrega:
Verificar se pasta public/js/ existe
Verificar caminho no HTML: ./js/elevea-analytics.js
Console mostra erro de CORS:
Normal em alguns casos, tracking ainda funciona
API da ELEVEA aceita requests de qualquer origem
Dados n√£o aparecem no dashboard:
Verificar SITE_SLUG
Aguardar at√© 5 minutos para sincroniza√ß√£o
Verificar se site est√° publicado (n√£o local)
üéØ RESULTADO FINAL
Ap√≥s implementa√ß√£o:

‚úÖ Site do cliente mant√©m layout id√™ntico
‚úÖ Dashboard da ELEVEA mostra dados reais
‚úÖ Tracking de visitas autom√°tico
‚úÖ Captura de leads em formul√°rios
‚úÖ Sistema de feedback funcionando
‚úÖ Zero impacto visual no site
üìä O dashboard da ELEVEA agora mostrar√° dados concretos e reais do site do cliente!